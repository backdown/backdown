{"name":"Backdown","tagline":"Backdown is a Markdown parser","body":"# Backdown\r\n\r\n[![Build Status](https://travis-ci.org/backdown/backdown.svg?branch=master)](https://travis-ci.org/backdown/backdown)\r\n[![Coverage Status](https://coveralls.io/repos/backdown/backdown/badge.svg?branch=master)](https://coveralls.io/r/backdown/backdown?branch=master)\r\n[![Join the chat at https://gitter.im/backdown/backdown](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/backdown/backdown?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\n`Backdown` is a Markdown parser based on the original code of the\r\n[vmg/sundown](https://github.com/vmg/sundown) by Vicent Marti.\r\n\r\n## Installation\r\n\r\n- Dynamic Library\r\n- Static Library\r\n- Executable Files\r\n\r\nJust type `make`.\r\n\r\n## Features\r\n\r\n*\t**Fully standards compliant**\r\n\r\n\t`Backdown` passes out of the box the official Markdown v1.0.0 and v1.0.3\r\n\ttest suites, and has been extensively tested with additional corner cases\r\n\tto make sure its output is as sane as possible at all times.\r\n\r\n*\t**Massive extension support**\r\n\r\n\t`Backdown` has optional support for several (unofficial) Markdown extensions,\r\n\tsuch as non-strict emphasis, fenced code blocks, tables, autolinks,\r\n\tstrikethrough and more.\r\n\r\n*\t**UTF-8 aware**\r\n\r\n\t`Backdown` is fully UTF-8 aware, both when parsing the source document and when\r\n\tgenerating the resulting (X)HTML code.\r\n\r\n*\t**Tested & Ready to be used on production**\r\n\r\n\t`Backdown` has been extensively security audited, and includes protection against\r\n\tall possible DOS attacks (stack overflows, out of memory situations, malformed\r\n\tMarkdown syntax...) and against client attacks through malicious embedded HTML.\r\n\r\n\tWe've worked very hard to make `Backdown` never crash or run out of memory\r\n\tunder *any* input. `Backdown` renders all the Markdown content in GitHub and so\r\n\tfar hasn't crashed a single time.\r\n\r\n*\t**Customizable renderers**\r\n\r\n\t`Backdown` is not stuck with XHTML output: the Markdown parser of the library\r\n\tis decoupled from the renderer, so it's trivial to extend the library with\r\n\tcustom renderers. A fully functional (X)HTML renderer is included.\r\n\r\n*\t**Optimized for speed**\r\n\r\n\t`Backdown` is written in C, with a special emphasis on performance. When wrapped\r\n\ton a dynamic language such as Python or Ruby, it has shown to be up to 40\r\n\ttimes faster than other native alternatives.\r\n\r\n*\t**Zero-dependency**\r\n\r\n\t`Backdown` is a zero-dependency library composed of 3 `.c` files and their headers.\r\n\tNo dependencies, no bullshit. Only standard C99 that builds everywhere.\r\n\r\n## Help us\r\n\r\n`Backdown` is all about security. If you find a (potential) security vulnerability in the\r\nlibrary, or a way to make it crash through malicious input, please report it to us,\r\neither directly via email or by opening an Issue on GitHub, and help make the web safer\r\nfor everybody.\r\n\r\n## Unicode character handling\r\n\r\nGiven that the Markdown spec makes no provision for Unicode character handling, `Backdown`\r\ntakes a conservative approach towards deciding which extended characters trigger Markdown\r\nfeatures:\r\n\r\n*\tPunctuation characters outside of the U+007F codepoint are not handled as punctuation.\r\n\tThey are considered as normal, in-word characters for word-boundary checks.\r\n\r\n*\tWhitespace characters outside of the U+007F codepoint are not considered as\r\n\twhitespace. They are considered as normal, in-word characters for word-boundary checks.\r\n\r\n## License\r\n\r\n[The MIT License (MIT)](https://github.com/backdown/backdown/blob/master/LICENSE)\r\n\r\n## Maintainer\r\n\r\nShintaro Kaneko <kaneshin0120@gmail.com>\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}